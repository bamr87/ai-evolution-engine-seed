#
# @file prompts/next_evolution.yml
# @description Template for subsequent evolution prompts in the AI evolution cycle
# @author IT-Journey Team <team@it-journey.org>
# @created 2025-07-12
# @lastModified 2025-07-12
# @version 1.0.0
#
# @relatedIssues 
#   - #prompt-standardization: Standardize prompt format across repository
#   - #evolution-continuity: Maintain evolution cycle continuity
#
# @relatedEvolutions
#   - v1.0.0: Initial creation with standardized YAML format
#
# @dependencies
#   - AI Evolution Engine: >=0.4.3
#   - Previous evolution context
#
# @changelog
#   - 2025-07-12: Initial creation with standardized format - ITJ
#
# @usage Template for continuing AI evolution cycles
# @notes Adaptable prompt for ongoing repository evolution
#

name: Next Evolution Cycle
description: Guides the next iteration of AI-driven repository evolution based on current state and growth objectives
model: gpt-4o-mini
modelParameters:
  temperature: 0.4
  max_tokens: 4000
messages:
  - role: system
    content: |
      You are an AI evolution agent continuing the development of this repository. Your role is to analyze the current state, identify improvement opportunities, and implement the next phase of evolution.
      
      **Evolution Principles:**
      - **Continuous Improvement**: Build upon existing features and capabilities
      - **Quality Enhancement**: Improve code quality, documentation, and testing
      - **Feature Expansion**: Add new functionality that provides value
      - **Maintainability**: Ensure changes enhance long-term maintainability
      - **Best Practices**: Apply industry best practices and modern patterns
      - **User Value**: Focus on features that provide real user value
  - role: user
    content: |
      Continue the evolution of this repository based on the current state and growth objectives:
      
      **Current Repository State:**
      {{current_state}}
      
      **Evolution Context:**
      - Previous evolution cycles: {{previous_cycles}}
      - Current metrics: {{current_metrics}}
      - Health assessment: {{health_status}}
      
      **Growth Objectives:**
      {{growth_objectives}}
      
      **Available Evolution Strategies:**
      
      1. **Feature Enhancement**
         - Expand existing features with new capabilities
         - Improve user experience and functionality
         - Add complementary features that work well together
      
      2. **Quality Improvement**
         - Refactor code for better readability and maintainability
         - Enhance error handling and edge case coverage
         - Improve performance and resource efficiency
      
      3. **Infrastructure Enhancement**
         - Improve CI/CD pipeline and automation
         - Enhance testing framework and coverage
         - Optimize build and deployment processes
      
      4. **Documentation and Usability**
         - Improve documentation quality and completeness
         - Add examples and tutorials
         - Enhance developer experience
      
      5. **Security and Reliability**
         - Implement security best practices
         - Add monitoring and observability
         - Improve error recovery and resilience
      
      **Analysis Framework:**
      
      1. **Current State Analysis**
         - What features exist and how well do they work?
         - What are the pain points and areas for improvement?
         - What technical debt needs to be addressed?
      
      2. **Opportunity Identification**
         - What new features would provide the most value?
         - What improvements would have the biggest impact?
         - What foundational work is needed for future growth?
      
      3. **Implementation Planning**
         - What is the optimal sequence of changes?
         - How can we ensure quality and maintainability?
         - What testing and validation is needed?
      
      Provide a comprehensive evolution plan with specific, actionable recommendations.
testData:
  - input: |
      current_state: "Repository has basic Idea Incubator feature with CLI interface"
      previous_cycles: "1 cycle - implemented core idea management"
      current_metrics: "75% test coverage, 3 features, 0 security issues"
      health_status: "Good - all tests passing, documentation current"
      growth_objectives: "Enhance user experience, add persistence, improve CLI"
    expected: |
      {
        "evolution_plan": {
          "priority": "high",
          "focus_areas": ["user_experience", "data_persistence", "cli_enhancement"],
          "estimated_impact": "significant"
        },
        "recommended_changes": [
          {
            "type": "feature_enhancement",
            "description": "Add data persistence to idea storage",
            "priority": "high",
            "effort": "medium"
          }
        ],
        "success_metrics": {
          "test_coverage_target": "85%",
          "new_features": 2,
          "documentation_updates": 3
        }
      }
evaluators:
  - name: Output should be valid JSON
    json:
      validJson: true
  - name: Should include evolution plan
    json:
      hasKey: "evolution_plan"
  - name: Should provide recommended changes
    json:
      hasKey: "recommended_changes"
  - name: Should define success metrics
    json:
      hasKey: "success_metrics"
  - name: Should specify priority levels
    json:
      path: "evolution_plan.priority"
      enum: ["low", "medium", "high", "critical"]
