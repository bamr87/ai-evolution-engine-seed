name: üå± AI Evolution Growth Engine (v0.4.8)

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Growth instructions for the AI (leave empty for changelog/versioning update)'
        required: false
        type: string
      growth_mode:
        description: 'Growth strategy (conservative, adaptive, experimental)'
        required: false
        default: 'adaptive'
        type: choice
        options:
          - conservative
          - adaptive
          - experimental
          - test-automation
      auto_plant_seeds:
        description: 'Automatically commit the newly generated .seed.md for next evolution?'
        required: false
        default: true
        type: boolean
      dry_run:
        description: 'Run in simulation mode without making actual changes'
        required: false
        default: false
        type: boolean
      use_container:
        description: 'Run in containerized environment (recommended for CI)'
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  EVOLUTION_VERSION: "0.4.8"
  WORKFLOW_TYPE: "manual_evolution"
  CI_ENVIRONMENT: "true"
  GITHUB_WORKSPACE: ${{ github.workspace }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  evolve:
    name: üåø Growth Cycle v0.4.8
    runs-on: ubuntu-latest
    
    steps:
      - name: üå± Initialize Evolution Environment
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: üõ†Ô∏è Setup Evolution Prerequisites  
        run: |
          sudo apt-get update -qq
          # Install core utilities - timeout is part of coreutils, not a separate package
          sudo apt-get install -y -qq jq tree curl git coreutils findutils grep
          
          # Verify timeout command is available (part of coreutils)
          if ! command -v timeout >/dev/null 2>&1; then
            echo "‚ùå timeout command not available"
            exit 1
          else
            echo "‚úÖ timeout command available"
          fi
          
          if [[ -f "./scripts/setup-environment.sh" ]]; then
            chmod +x ./scripts/setup-environment.sh
            ./scripts/setup-environment.sh || echo "Setup completed with warnings"
          else
            echo "‚ö†Ô∏è Setup script not found, using minimal setup"
          fi
        env:
          EVOLUTION_TYPE: "manual"
          GROWTH_MODE: ${{ github.event.inputs.growth_mode }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}

      - name: üìù Determine Evolution Prompt
        id: prompt-selection
        run: |
          if [ -z "${{ github.event.inputs.prompt }}" ]; then
            EVOLUTION_PROMPT="Analyze recent commits and update CHANGELOG.md with proper semantic versioning."
          else
            EVOLUTION_PROMPT="${{ github.event.inputs.prompt }}"
          fi
          
          echo "EVOLUTION_PROMPT<<EOF" >> $GITHUB_ENV
          echo "$EVOLUTION_PROMPT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: üîç Pre-Evolution Validation
        run: |
          if [[ -f "./scripts/check-prereqs.sh" ]]; then
            chmod +x ./scripts/check-prereqs.sh
            ./scripts/check-prereqs.sh --growth-mode "${{ github.event.inputs.growth_mode }}" || echo "Validation completed with warnings"
          else
            echo "‚ö†Ô∏è Prerequisite check script not found"
          fi

      - name: üß† Context Collection & Analysis
        run: |
          echo "üîç Starting context collection..."
          
          # Create minimal context fallback
          cat > /tmp/repo_context.json << 'EOF'
          {
            "metadata": {
              "collection_summary": {
                "files_collected": 0,
                "status": "minimal_fallback"
              }
            },
            "current_metrics": {
              "growth_cycles": 0,
              "current_generation": 0
            }
          }
          EOF
          
          # Try to run actual context collection
          if [[ -f "./scripts/collect-context.sh" ]]; then
            chmod +x ./scripts/collect-context.sh
            timeout 180 ./scripts/collect-context.sh --prompt "$EVOLUTION_PROMPT" --growth-mode "${{ github.event.inputs.growth_mode }}" || echo "Context collection failed, using fallback"
          fi
          
          echo "Context collection completed"

      - name: üöÄ AI Growth Simulation
        run: |
          if [[ -f "./scripts/simulate-ai-growth.sh" ]]; then
            chmod +x ./scripts/simulate-ai-growth.sh
            ./scripts/simulate-ai-growth.sh --prompt "$EVOLUTION_PROMPT" --growth-mode "${{ github.event.inputs.growth_mode }}" || echo "Simulation completed with warnings"
          else
            echo "‚ö†Ô∏è Simulation script not found"
            echo '{"status": "simulation_skipped"}' > /tmp/evolution_response.json
          fi

      - name: üîÑ Apply Growth Changes
        if: github.event.inputs.dry_run == 'false'
        run: |
          if [[ -f "./scripts/apply-growth-changes.sh" ]]; then
            chmod +x ./scripts/apply-growth-changes.sh
            ./scripts/apply-growth-changes.sh --growth-mode "${{ github.event.inputs.growth_mode }}" || echo "Changes applied with warnings"
          else
            echo "‚ö†Ô∏è Apply changes script not found"
          fi

      - name: üìà Evolution Tracking
        run: |
          if [[ -f "./scripts/version-tracker.sh" ]]; then
            chmod +x ./scripts/version-tracker.sh
            ./scripts/version-tracker.sh complete --mode "${{ github.event.inputs.growth_mode }}" || echo "Tracking completed with warnings"
          else
            echo "‚ö†Ô∏è Version tracker script not found"
          fi

      - name: üß™ Test Framework Validation
        run: |
          if [[ -f "./tests/workflows/test-all-workflows-local.sh" ]]; then
            chmod +x ./tests/workflows/test-all-workflows-local.sh
            ./tests/workflows/test-all-workflows-local.sh || echo "Tests completed with warnings"
          else
            echo "‚ö†Ô∏è Test framework not found"
          fi

      - name: üåø Generate Evolution Seeds
        if: github.event.inputs.auto_plant_seeds == 'true'
        run: |
          if [[ -f "./scripts/generate_seed.sh" ]]; then
            chmod +x ./scripts/generate_seed.sh
            ./scripts/generate_seed.sh --cycle "$(date +%Y%m%d)" --prompt "$EVOLUTION_PROMPT" || echo "Seed generation completed with warnings"
          else
            echo "‚ö†Ô∏è Seed generation script not found"
          fi

      - name: üìã Create Evolution Pull Request
        if: github.event.inputs.dry_run == 'false'
        run: |
          if [[ -f "./scripts/create_pr.sh" ]]; then
            chmod +x ./scripts/create_pr.sh
            ./scripts/create_pr.sh --prompt "$EVOLUTION_PROMPT" --mode "${{ github.event.inputs.growth_mode }}" || echo "PR creation completed with warnings"
          else
            echo "‚ö†Ô∏è PR creation script not found"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìä Final Evolution Summary
        run: |
          echo "üéâ Evolution cycle v0.4.8 completed!"
          echo "Growth mode: ${{ github.event.inputs.growth_mode }}"
          echo "Dry run: ${{ github.event.inputs.dry_run }}"
          if [[ -f /tmp/repo_context.json ]]; then
            echo "Context file size: $(wc -c < /tmp/repo_context.json) bytes"
          fi
