name: üå± AI Evolution Growth Engine (v0.3.0)

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Growth instructions for the AI (e.g., "Implement user authentication")'
        required: true
        type: string
      growth_mode:
        description: 'Growth strategy (conservative, adaptive, experimental)'
        required: false
        default: 'adaptive'
        type: choice
        options:
          - conservative
          - adaptive
          - experimental
      auto_plant_seeds:
        description: 'Automatically commit the newly generated .seed.md for next evolution?'
        required: false
        default: true
        type: boolean
      dry_run:
        description: 'Run in simulation mode without making actual changes'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  EVOLUTION_VERSION: "0.3.0"
  WORKFLOW_TYPE: "manual_evolution"

jobs:
  evolve:
    name: üåø Growth Cycle v0.3.0
    runs-on: ubuntu-latest
    
    env:
      PROMPT: ${{ inputs.prompt }}
      GROWTH_MODE: ${{ inputs.growth_mode }}
      AUTO_PLANT_SEEDS: ${{ inputs.auto_plant_seeds }}
      DRY_RUN: ${{ inputs.dry_run }}
    
    steps:
      - name: üå± Prepare Growth Environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN_TOKEN }}
          
      - name: üõ†Ô∏è Setup Environment
        run: |
          if [ ! -f "./scripts/setup-environment.sh" ]; then
            echo "‚ùå Setup script not found!"
            exit 1
          fi
          chmod +x ./scripts/setup-environment.sh
          ./scripts/setup-environment.sh
          
      - name: üîç Validate Prerequisites
        run: |
          chmod +x ./scripts/check-prereqs.sh
          ./scripts/check-prereqs.sh "$GROWTH_MODE"
          
      - name: üß¨ Collect Repository DNA & Metrics
        id: collect_context
        run: |
          chmod +x ./scripts/collect-context.sh
          ./scripts/collect-context.sh \
            "$PROMPT" \
            "$GROWTH_MODE" \
            "/tmp/repo_context.json"
          
      - name: üß† Invoke AI Growth Engine
        id: ai_growth_simulation
        run: |
          chmod +x ./scripts/simulate-ai-growth.sh
          ./scripts/simulate-ai-growth.sh \
            "$PROMPT" \
            "$GROWTH_MODE" \
            "/tmp/repo_context.json" \
            "/tmp/evolution_response.json"

      - name: üåæ Apply Growth Changes
        if: env.DRY_RUN != 'true'
        run: |
          chmod +x ./scripts/apply-growth-changes.sh
          ./scripts/apply-growth-changes.sh "/tmp/evolution_response.json"
          
      - name: üîç Dry Run - Preview Changes
        if: env.DRY_RUN == 'true'
        run: |
          echo "üîç DRY RUN MODE - Changes that would be applied:"
          if [ -f "/tmp/evolution_response.json" ]; then
            cat "/tmp/evolution_response.json" | jq -r '.changes[] | "\(.type): \(.file)"'
          fi
          
      - name: üå∞ Plant New Seeds
        if: env.AUTO_PLANT_SEEDS == 'true' && env.DRY_RUN != 'true'
        run: |
          chmod +x ./scripts/plant-new-seeds.sh
          ./scripts/plant-new-seeds.sh "/tmp/evolution_response.json" "$AUTO_PLANT_SEEDS"
          
      - name: üå≥ Create Growth Pull Request
        if: env.DRY_RUN != 'true'
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN_TOKEN }}
        run: |
          chmod +x ./scripts/create_pr.sh
          ./scripts/create_pr.sh "/tmp/evolution_response.json" "$PROMPT" "$GROWTH_MODE"
