name: ðŸŒ± Daily Evolution & Maintenance (v0.2.1)

on:
  schedule:
    # Run daily at 3 AM UTC (customize as needed)
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      evolution_type:
        description: 'Type of daily evolution to run'
        required: false
        default: 'consistency'
        type: choice
        options:
          - consistency
          - error_fixing
          - documentation
          - code_quality
          - security_updates
      intensity:
        description: 'Evolution intensity level'
        required: false
        default: 'minimal'
        type: choice
        options:
          - minimal
          - moderate
          - comprehensive
      force_run:
        description: 'Force run even if no changes detected'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  EVOLUTION_TYPE: ${{ github.event.inputs.evolution_type || 'consistency' }}
  INTENSITY: ${{ github.event.inputs.intensity || 'minimal' }}
  FORCE_RUN: ${{ github.event.inputs.force_run || 'false' }}

jobs:
  daily_evolution:
    name: ðŸŒ¿ Daily Growth & Maintenance
    runs-on: ubuntu-latest
    
    steps:
      - name: ðŸŒ± Prepare Evolution Environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: ðŸ“Š Analyze Repository Health
        id: health_check
        run: |
          ./scripts/analyze-repository-health.sh \
            "$EVOLUTION_TYPE" \
            "$INTENSITY" \
            "$FORCE_RUN"
          
          # Load results for GitHub Actions output
          source /tmp/health_check_results.env
          echo "issues_found=$ISSUES_FOUND" >> $GITHUB_OUTPUT
          echo "should_evolve=$SHOULD_EVOLVE" >> $GITHUB_OUTPUT
          
          # Format suggestions for GitHub Actions
          if [ -f "/tmp/health_check_suggestions.txt" ]; then
            {
              echo 'suggestions<<EOF'
              cat /tmp/health_check_suggestions.txt
              echo 'EOF'
            } >> $GITHUB_OUTPUT
          fi

      - name: ðŸ§¬ Generate Evolution Prompt
        id: generate_prompt
        if: steps.health_check.outputs.should_evolve == 'true'
        run: |
          ./scripts/generate-evolution-prompt.sh \
            "$EVOLUTION_TYPE" \
            "$INTENSITY"
          
          # Load the generated prompt for GitHub Actions output
          {
            echo 'evolution_prompt<<EOF'
            cat /tmp/evolution_prompt.txt
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: ðŸš€ Trigger Evolution Workflow
        if: steps.health_check.outputs.should_evolve == 'true'
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          ./scripts/trigger-evolution-workflow.sh \
            "$EVOLUTION_TYPE" \
            "conservative"

      - name: ðŸ“Š Update Daily Evolution Metrics
        if: steps.health_check.outputs.should_evolve == 'true'
        run: ./scripts/update-evolution-metrics.sh

      - name: ðŸŒ± No Evolution Needed
        if: steps.health_check.outputs.should_evolve == 'false'
        run: |
          echo "ðŸŒ± Repository health check complete - no evolution needed"
          echo "âœ… Repository is in good health!"
          echo "ðŸ”„ Next automated check will run tomorrow at 3 AM UTC"
          echo ""
          echo "To force an evolution cycle, run:"
          echo "  gh workflow run daily_evolution.yml -f force_run=true"
