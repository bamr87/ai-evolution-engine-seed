name: üå± Daily Evolution & Maintenance (v0.3.0)

on:
  schedule:
    # Run daily at 3 AM UTC (customize as needed)
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      evolution_type:
        description: 'Type of daily evolution to run'
        required: false
        default: 'consistency'
        type: choice
        options:
          - consistency
          - error_fixing
          - documentation
          - code_quality
          - security_updates
      intensity:
        description: 'Evolution intensity level'
        required: false
        default: 'minimal'
        type: choice
        options:
          - minimal
          - moderate
          - comprehensive
      force_run:
        description: 'Force run even if no changes detected'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Run in simulation mode without making actual changes'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  EVOLUTION_VERSION: "0.3.0"
  WORKFLOW_TYPE: "scheduled_evolution"

jobs:
  daily_evolution:
    name: üåø Daily Growth & Maintenance
    runs-on: ubuntu-latest
    
    env:
      EVOLUTION_TYPE: ${{ github.event.inputs.evolution_type || 'consistency' }}
      INTENSITY: ${{ github.event.inputs.intensity || 'minimal' }}
      FORCE_RUN: ${{ github.event.inputs.force_run || 'false' }}
      DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
    
    steps:
      - name: üå± Prepare Evolution Environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
          
      - name: üõ†Ô∏è Setup Environment
        run: |
          if [ ! -f "./scripts/setup-environment.sh" ]; then
            echo "‚ùå Setup script not found!"
            exit 1
          fi
          chmod +x ./scripts/setup-environment.sh
          ./scripts/setup-environment.sh
          
      - name: üìä Analyze Repository Health
        id: health_check
        run: |
          chmod +x ./scripts/analyze-repository-health.sh
          ./scripts/analyze-repository-health.sh \
            "$EVOLUTION_TYPE" \
            "$INTENSITY" \
            "$FORCE_RUN"
          
          # Load results for GitHub Actions output
          if [ -f "/tmp/health_check_results.env" ]; then
            source /tmp/health_check_results.env
            echo "issues_found=${ISSUES_FOUND:-0}" >> $GITHUB_OUTPUT
            echo "should_evolve=${SHOULD_EVOLVE:-false}" >> $GITHUB_OUTPUT
          fi
          
          # Format suggestions for GitHub Actions
          if [ -f "/tmp/health_check_suggestions.txt" ]; then
            {
              echo 'suggestions<<EOF'
              cat /tmp/health_check_suggestions.txt
              echo 'EOF'
            } >> $GITHUB_OUTPUT
          fi

      - name: üß¨ Generate Evolution Prompt
        id: generate_prompt
        if: steps.health_check.outputs.should_evolve == 'true'
        run: |
          chmod +x ./scripts/generate-evolution-prompt.sh
          ./scripts/generate-evolution-prompt.sh \
            "$EVOLUTION_TYPE" \
            "$INTENSITY"
          
          # Load the generated prompt for GitHub Actions output
          if [ -f "/tmp/evolution_prompt.txt" ]; then
            {
              echo 'evolution_prompt<<EOF'
              cat /tmp/evolution_prompt.txt
              echo 'EOF'
            } >> $GITHUB_OUTPUT
          fi

      - name: üöÄ Trigger Evolution Workflow
        if: steps.health_check.outputs.should_evolve == 'true' && env.DRY_RUN != 'true'
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          chmod +x ./scripts/trigger-evolution-workflow.sh
          ./scripts/trigger-evolution-workflow.sh \
            "$EVOLUTION_TYPE" \
            "conservative"

      - name: üîç Dry Run - Preview Evolution
        if: steps.health_check.outputs.should_evolve == 'true' && env.DRY_RUN == 'true'
        run: |
          echo "üîç DRY RUN MODE - Evolution that would be triggered:"
          echo "Evolution Type: $EVOLUTION_TYPE"
          echo "Intensity: $INTENSITY"
          echo "Suggestions:"
          if [ -f "/tmp/health_check_suggestions.txt" ]; then
            cat /tmp/health_check_suggestions.txt
          fi

      - name: üìä Update Daily Evolution Metrics
        if: steps.health_check.outputs.should_evolve == 'true' && env.DRY_RUN != 'true'
        run: |
          chmod +x ./scripts/update-evolution-metrics.sh
          ./scripts/update-evolution-metrics.sh

      - name: üå± No Evolution Needed
        if: steps.health_check.outputs.should_evolve == 'false'
        run: |
          echo "üå± Repository health check complete - no evolution needed"
          echo "‚úÖ Repository is in good health!"
          echo "üîÑ Next automated check will run tomorrow at 3 AM UTC"
          echo ""
          echo "To force an evolution cycle, run:"
          echo "  gh workflow run daily_evolution.yml -f force_run=true"
