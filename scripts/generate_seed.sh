#!/usr/bin/env bash
#
# @file scripts/generate_seed.sh
# @description Generates the next .seed.md content for the AI Evolution Engine
# @author IT-Journey Team <team@it-journey.org>
# @created 2025-07-05
# @lastModified 2025-07-05
# @version 2.0.0
#
# @relatedIssues 
#   - Refactor scripts to be modular with well-structured library
#
# @relatedEvolutions
#   - v2.0.0: Complete modular refactor using new library system
#
# @dependencies
#   - bash: >=4.0
#   - src/lib/core/bootstrap.sh: Library bootstrap
#   - src/lib/evolution/seeds.sh: Seed management
#
# @changelog
#   - 2025-07-05: Refactored to use modular library system - ITJ
#
# @usage ./generate_seed.sh <cycle> <generation> <prompt> <growth_mode>
# @notes Generates evolved seed content for next iteration
#

set -euo pipefail

# Get script directory for relative imports
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"

# Bootstrap the modular library system
source "$PROJECT_ROOT/src/lib/core/bootstrap.sh"
bootstrap_library

# Load required modules
require_module "core/logger"
require_module "evolution/seeds"
require_module "template/engine"

# Initialize logging
init_logger "logs" "generate-seed"

# Validate input parameters
if [[ $# -lt 4 ]]; then
    log_error "Usage: $0 <new_cycle> <new_generation> <prompt> <growth_mode>"
    exit 1
fi

NEW_CYCLE="$1"
NEW_GENERATION="$2"
PROMPT="$3"
GROWTH_MODE="$4"

log_info "Generating seed for cycle $NEW_CYCLE, generation $NEW_GENERATION"
log_info "Growth mode: $GROWTH_MODE"

# Use the modular seed generation system
if seeds_generate_content "$NEW_CYCLE" "$NEW_GENERATION" "$PROMPT" "$GROWTH_MODE"; then
    log_info "‚úÖ Seed content generated successfully"
else
    log_error "‚ùå Failed to generate seed content"
    exit 1
fi
*üå± Generated by AI Evolution Engine v0.2.0 Workflow*
*"From sapling to forest, one cycle at a time."*
EOF

log_success "Seed content generated successfully for cycle $NEW_CYCLE"
